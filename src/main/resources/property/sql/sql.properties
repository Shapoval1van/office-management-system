# CHANGE GROUP REPOSITORY
change.group.find.by.request.id=SELECT CG.request_id, CG.change_group_id, CG.created, CI.change_item_id, CI.field_id, CI.new_value, CI.old_value, \
    CG.author_id, P.first_name, P.last_name \
    FROM change_group AS CG \
    LEFT JOIN change_item AS CI ON CG.change_group_id = CI.change_group_id \
    JOIN person AS P ON CG.author_id = p.person_id \
    WHERE CG.request_id= ?
change.group.period.day=AND age(CG.created) < '1 day'
change.group.period.month=AND age(CG.created) < '30 day'


#COMMENT REPOSITORY
comment.find.by.request.id=SELECT comment_id, body, request_id, author_id, publish_date FROM comment \
   WHERE request_id=?


#FIELD REPOSITORY
field.select.all=SELECT * FROM field WHERE name = ?


#NOTIFICATION
notification.find.all.sort.by.date=select notification_id, person_id, subject, notification_text, link, created \
    from NOTIFICATION order by created


#PERSON
person.find.by.email=SELECT person_id, first_name, last_name, email, password, role_id, enabled \
    FROM person WHERE email = ?

person.find.by.name.pattern=SELECT person_id, first_name, last_name, email, password, role_id, enabled \
    FROM  person WHERE (LOWER(CONCAT(first_name, last_name)) like LOWER(CONCAT('%', REPLACE(? , ' ', '%'), '%'))) AND \
    role_id = 2

person.find.manager=SELECT person_id, first_name, last_name, email, password, role_id, enabled \
    FROM person WHERE role_id = 2

person.update.password=UPDATE person SET password = ? WHERE email = ?


#PRIORITY
priority.find.by.name=SELECT * FROM priority WHERE name = ?


#REQUEST GROUP
request.group.find.by.author=SELECT request_group_id, name, author_id FROM request_group WHERE author_id = ?
request.group.find.by.name.part=SELECT request_group_id, name, author_id FROM request_group WHERE name ~* ? AND author_id = ?
request.group.count.by.author=SELECT COUNT(*) FROM request_group WHERE author_id = ?


#REQUEST
request.find.all.available.by.priority=SELECT * FROM request WHERE priority_id = ? AND manager_id IS NULL \
    ORDER BY creation_time DESC
request.find.all.available=SELECT * FROM request WHERE manager_id IS NULL ORDER BY creation_time DESC
request.find.all.by.employee=SELECT * FROM request WHERE employee_id = ? \
    AND status_id!=4
request.find.all.sub.request=SELECT  request_id, name, description, creation_time, \
    estimate, status_id, employee_id, manager_id, priority_id, request_group_id, parent_id FROM \
    request WHERE parent_id = ?
request.assign=UPDATE request SET manager_id = ?, status_id = ? \
    WHERE request_id = ?
request.count.by.priority=SELECT count(request_id) FROM request \
    WHERE priority_id = ? AND manager_id IS NULL
request.count.by.employee=SELECT count(request_id) FROM request \
    WHERE employee_id = ? AND status_id!=4
request.find.by.request.group=SELECT * FROM request WHERE request_group_id = ?
request.update.status=UPDATE request SET status_id = ? WHERE request_id = ?
request.update.priority=UPDATE request SET priority_id = ? WHERE request_id = ?
request.update.group=UPDATE request SET request_group_id = ? WHERE request_id = ?
request.all.per.calendar.month = SELECT * FROM request\
    WHERE creation_time >= date_trunc('month', current_date) AND creation_time <= (current_date + INTERVAL '1 day')\
    AND request.employee_id = ? ORDER BY creation_time;
request.all.per.calendar.year = SELECT * FROM request\
    WHERE creation_time >= date_trunc('year', current_date) AND creation_time <= (current_date + INTERVAL '1 day')\
    AND request.employee_id = ? ORDER BY creation_time;
request.all.per.calendar.quarter = SELECT * FROM request\
    WHERE creation_time >= date_trunc('quarter', current_date) AND creation_time <= (current_date + INTERVAL '1 day')\
    AND request.employee_id = ? ORDER BY creation_time;



#TOKEN
token.find=SELECT token_id, token, person_id, token_type, date_expired FROM TOKEN \
    WHERE token = ?
token.registration.find.by.person=SELECT token_id, token, person_id, token_type, date_expired FROM TOKEN \
    WHERE person_id = ? AND token_type = 1
token.reset.pass.find.by.person=SELECT token_id, token, person_id, token_type, date_expired FROM TOKEN \
    WHERE person_id = ? AND token_type = 2