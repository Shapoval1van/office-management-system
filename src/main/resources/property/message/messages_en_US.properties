#REQUEST ERRORS
request.error.delete.canceled=Request already canceled!
request.error.delete.closed=You cannot cancel closed request!
request.error.delete.not.permission=You have no permission to cancel this request
request.error.delete.not.free=You cannot cancel non free request
request.error.already.assigned=Request is already assigned
request.error.not.exist=Request with id {0} not exist
request.error.must.free=Request should be in FREE status for grouping. Current status is {0}
request.error.update.canceled=You cannot update canceled request!
request.error.update.closed=You cannot update closed request! If you want to update this request, you must reopen it
request.error.update.not.permission=You have no permission to update this request
request.error.update.non.free=You cannot update non free requests
request.error.not.exist.person.or.request=Request or person does not exist
request.error.not.assigned=Request should be assigned

#SUB REQUEST ERRORS
subrequest.error.parent=No parent request with id {0}
subrequest.error.parentIsSubrequest=Parent request is sub request
subrequest.error.parentClosed=Parent request is closed or canceled
subrequest.error.illegal.access=Sub request can create manager which parent request is attached or administrator.

#STATUS ERRORS
status.error=Status with id {0} not found
status.error.incorrect=Incorrect status
status.error.not.available.for.group=Status {0} not available for group
status.error.not.available=Not available status

#MANAGERS ERRORS
manager.error.email=No manager with email {0}
manager.error.has.available.requests =Manager has requests in progress

#ADMIN ERRORS
user.error.update.current.admin=You cannot update yourself
user.error.update.from.manager.to.employee=Cannot update user from manager to employee
user.error.update.from.admin.to.employee=Cannot update user from admin to employee
admin.error.removing.user = Administrator cannot delete himself

#EMPLOYEE ERRORS
employee.error.email=No employee with email {0}
employee.error.id=No employee with id {0}

#REQUST GROUP ERRORS
request.group.error.illegal.access=Add to request group can only author or administrator
request.group.error.not.exist=Request group with id {0} does not exist
request.group.error.already.exist=Request group with name {0} already exist

#USER ERRORS
user.error.not.present=Current user not present
user.error.not.present.with.id=Can't find person with id {0}
user.error.email=No user with email {0}
user.deleted.error=This user was deleted

#TOKEN
token.error.expired=Token was expired

#PRIORITY
priority.error.id=No priority with id {0}

#Request update notifications
request.update.message.subject=Request {0} updated
request.update.message.body=Change property {0} from {1} to {2} at {3}. Request details: {4}

#FRONT-NOTIFICATION
cannot.delete.notification.exception=Notification by person id:{0} has not deleted
change.status.subject={0} status was changed to: {1}
change.manager.subject={0} manager was changed to: {1}
change.request={0} was updated
change.group={0} was added to group {1}
change.status.to.free = {0} was RE-OPEN
change.status.to.closed = {0} was CLOSED

#MAIL
mail.sending.error=Mail sending error
user.account.deleted=User with id {0} ({1}) is deleted

#REPORT
report.not.data.for.this.role=Not data for this role